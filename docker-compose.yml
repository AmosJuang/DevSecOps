services:
  devsecops-web:
    build:
      context: .
      dockerfile: Dockerfile.stg
    container_name: devsecops-frontend
    ports:
      - "3001:3001"
    environment:
      - VITE_API_URL=http://devsecops-backend:3000
    depends_on:
      - backend
    networks:
      - devsecops_network

  backend:
    build:
      context: ./backend
    container_name: devsecops-backend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - JWT_SECRET=your_actual_secret_key
      - USER=postgres
      - HOST=postgres
      - PASSWORD=your_actual_password
      - DATABASE=realrate
      - DB_PORT=5432
    depends_on:
      - postgres
    networks:
      - devsecops_network

  postgres:
    image: postgres:14-alpine
    container_name: devsecops-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=your_actual_password
      - POSTGRES_DB=realrate
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=50'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - devsecops_network

volumes:
  postgres_data:

networks:
  devsecops_network:
    name: devsecops_network  # This will force the exact network name
    driver: bridge